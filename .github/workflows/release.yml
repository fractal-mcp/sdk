name: Release Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string
      release_notes:
        description: 'Release notes for this version'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'
          scope: '@fractal-mcp'
          always-auth: true

      - name: Install dependencies
        run: npm install

      - name: Verify workspace setup
        run: |
          echo "=== Workspace packages ==="
          npm ls --depth=0 --workspaces
          echo "=== Turbo version ==="
          npx turbo --version

      - name: Update package versions
        run: |
          # Make the script executable
          chmod +x scripts/update-versions.js
          
          # Update all package versions using the Node.js script
          node scripts/update-versions.js "${{ inputs.version }}"

      - name: Build packages
        run: |
          echo "=== Building packages only (excluding apps) ==="
          npx turbo build --filter='./packages/*' --verbosity=2
          echo "=== Build completed ==="
          
      - name: Type check
        run: |
          echo "=== Type checking ==="
          npx turbo run type-check || echo "Type check failed, but continuing..."
          
      - name: Create Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Release v${{ inputs.version }}: ${{ inputs.release_notes }}" || echo "No changes to commit"
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}: ${{ inputs.release_notes }}"
          git push origin "v${{ inputs.version }}"

      - name: Publish packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "=== Verifying npm authentication ==="
          npm whoami
          
          echo "=== Configuring .npmrc ==="
          echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> ~/.npmrc
          
          echo "=== Publishing packages via Turbo ==="
          npx turbo run release --filter='./packages/*' --concurrency=1
          
          echo "=== Publishing complete ==="

      - name: Create GitHub Release
        uses: shogo82148/actions-create-release@v1
        with:
          tag_name: v${{ inputs.version }}
          release_name: Release v${{ inputs.version }}
          body: ${{ inputs.release_notes }}
          draft: false
          prerelease: false

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ inputs.version }}
          path: |
            packages/*/dist/
            apps/*/dist/
            !packages/*/node_modules/
            !apps/*/node_modules/
          retention-days: 30